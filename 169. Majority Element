class Solution {
    // Approach - 1 - Boyer - Moore Voting Algo
    // O(N) O(1)
    public int majorityElement(int[] nums) {
        int count = 0;
        int majElement = 0;
        for(int num : nums){
            if(count == 0){
                majElement = num;
            }
            if(num == majElement){
                count++;
            }
            else{
                count--;
            }
        }
        return majElement;
    }
}
















// class Solution {
//     //Approach - 2
//     public int majorityElement(int[] nums) {
//         int n = nums.length;
//         HashMap<Integer, Integer> map = new HashMap<>();
//         for(int i = 0; i < n; i++){
//             map.put(nums[i], map.getOrDefault(nums[i], 0)+1);
//             if(map.get(nums[i]) > n/2){
//                 return nums[i];
//             }
//         }
//         return -1;
//     }
// }











//Approach - 1
// class Solution {
//     public int majorityElement(int[] nums) {
//         int n = nums.length;
//         for(int i = 0; i<nums.length; i++){
//             int count = 0;
//             for(int j = 0; j<nums.length; j++){
//                 if(nums[i] == nums[j]){
//                     count++;
//                 }
//             }
//             if(count > n/2){
//                 return nums[i];
//             }
//         }
//         return -1;
//     }
// }
